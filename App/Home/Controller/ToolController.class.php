<?php/** * Author: huanglele * Date: 2016/6/28 * Time: 下午 09:02 * Description: */namespace Home\Controller;use Think\Controller;class ToolController extends Controller{    /**     * 查询一定条件的商品列表     * @param $map Array 条件     * @param $limit Number 查询数量     * @param $order String 排序     * @return mixed Array 返回结果集     */    public function getGoods($map,$limit,$order){        return M('goods')->where($map)->order($order)->limit($limit)->field('gid,img,name,buy_price as price')->select();    }    /**     * @param $table 数据库模型     * @param $map 查询限制条件     * @param $order 排序     * @param bool|false $field 需要查询的字段     * @return array 返回查询到的数据数组     */    public function getList($table,$map,$order,$field=false){        $M = M($table);        $count = $M->where($map)->count();        $Page = new\Think\Page($count,16);        $show = $Page->show();        if($field){            $list = $M->where($map)->field($field)->order($order)->limit($Page->firstRow,$Page->listRows)->select();        }else{            $list = $M->where($map)->order($order)->limit($Page->firstRow,$Page->listRows)->select();        }        $this->assign('list',$list);        $this->assign('page',$show);        return $list;    }    //处理订单    public function addOrder(){        $addressId = I('post.address');        $address_info = M('address')->field('phone,name,address')->find($addressId);        if($address_info){            $addrArr = array('name'=>$address_info['name'],'phone'=>$address_info['phone'],'address'=>$address_info['address']);            $data['address_info'] = json_encode($addrArr);            //处理商品信息            $gidArr = I('post.gid');            $numArr = I('post.num');            $gInfo = M('goods')->where(array('gid'=>array('in',$gidArr)))->getField('gid,buy_price as price',true);            $goods = array();            $goodAmount = 0;            $cart = session('cart');            foreach($gidArr as $k=>$v){                unset($cart[$v]);                $i['gid'] = $v;                $i['buy_num'] = $numArr[$k];                $i['pay_each_price'] = $gInfo[$v]['price'];                $goods[] = $i;                $goodAmount += $i['num']*$i['pay_each_price'];            }            session('cart',$cart);            if(count($goods)<1){                $ret['status'] = false;                $ret['msg'] = '商品为空';                return $ret;            }            $data['goods_info'] = json_encode($goods);            $data['create_time'] = time();            $data['uid'] = session('uid');            $yunfei = readConf('yunfei')?readConf('yunfei'):0;            $data['yunfei'] = $yunfei;            $data['pay_time'] = 0;            $data['status'] = 1;            $data['type'] = 1;            $data['trade'] = createTrade();            if(M('orders')->add($data)){                $ret['status'] = true;                $ret['trade'] = $data['trade'];                $ret['money'] = $yunfei + $goodAmount;            }else{                $ret['status'] = false;                $ret['msg'] = '生成订单失败';            }            return $ret;        }else{            $ret['status'] = false;            $ret['msg'] = '地址信息错误';            return $ret;        }    }}